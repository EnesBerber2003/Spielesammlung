Index: src/HangmanArcade.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.*;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\n\r\npublic class HangmanArcade extends Spiel {\r\n    // Instanzvariablen\r\n    private List<String> words;\r\n    private String word;\r\n    private int allowedMistakes, score, record;\r\n    private final ArrayList<Character> letters;\r\n    private final Scanner scanner;\r\n    private final Random random;\r\n\r\n    private enum GameResult {\r\n        LETTER_FOUND, LETTER_NOT_FOUND, WORD_GUESSED, WORD_NOT_GUESSED\r\n    }\r\n\r\n    public HangmanArcade() {\r\n        String filePath = \"C:\\\\Users\\\\emali\\\\Desktop\\\\IdeaProjects\\\\Spielesammlung\\\\Wörter.txt\";\r\n        try {\r\n            words = Files.readAllLines(Path.of(filePath));\r\n        } catch (IOException e) {\r\n            System.err.println(\"Fehler beim Lesen der Datei: \" + e.getMessage());\r\n        }\r\n        allowedMistakes = 10;\r\n        score = 0;\r\n        record = 0;\r\n        letters = new ArrayList<>();\r\n        scanner = new Scanner(System.in);\r\n        random = new Random();\r\n        System.out.println(\"Willkommen bei Hangman Arcade!\");\r\n        System.out.println(\"Sie haben bis zu 10 Fehlversuche, um ein Wort zu erraten.\");\r\n        System.out.println(\"Für jeden ungenutzten Fehlversuch erhalten Sie 10 Punkte, wenn Sie das Wort richtig erraten.\");\r\n        System.out.println(\"Falls Sie das Wort nicht erraten, werden Ihre Punkte auf 0 zurückgesetzt.\");\r\n    }\r\n\r\n    public void starteSpiel() {\r\n        boolean spielLaeuft = true;\r\n        while (spielLaeuft) {\r\n            word = words.get(random.nextInt(words.size()));\r\n            System.out.println(word);\r\n            for (int i = 0; i < word.length(); i++) {\r\n                if (word.charAt(i) == ' ') {\r\n                    letters.add(' ');\r\n                } else {\r\n                    letters.add('_');\r\n                }\r\n            }\r\n            for (int i = 0; i < 10; i++) {\r\n                System.out.println();\r\n            }\r\n            boolean amRaten = true;\r\n            while (amRaten) {\r\n                spielfeldAusgeben();\r\n                System.out.println(\"Geben Sie einen Buchstaben oder das ganze Wort an:\");\r\n                String eingabe = scanner.nextLine().toLowerCase();\r\n                GameResult ergebnis;\r\n                ergebnis = eingabeAuswerten(eingabe);\r\n\r\n                switch (ergebnis) {\r\n                    case LETTER_NOT_FOUND -> {\r\n                        System.out.println(\"Dieser Buchstabe ist nicht im Wort enthalten.\");\r\n                    }\r\n                    case WORD_GUESSED, WORD_NOT_GUESSED -> {\r\n                        punkteVergeben(ergebnis);\r\n                        allowedMistakes = 10;\r\n                        letters.clear();\r\n                        System.out.println(\"Möchen Sie weiter spielen? ja/nein\");\r\n                        String antwort = scanner.nextLine();\r\n                        while (!antwort.equals(\"ja\") && !antwort.equals(\"nein\")) {\r\n                            System.out.println(\"Bitte geben Sie 'ja' oder 'nein' ein.\");\r\n                            antwort = scanner.nextLine();\r\n                        }\r\n                        if (antwort.equals(\"nein\")) {\r\n                            spielLaeuft = false;\r\n                        }\r\n                        amRaten = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        System.exit(0);\r\n    }\r\n\r\n    private void spielfeldAusgeben() {\r\n        System.out.println();\r\n        System.out.print(\"Verbleibende Fehlversuche: \" + allowedMistakes);\r\n        System.out.print(\"    \");\r\n        System.out.print(\"Punktestand: \" + score);\r\n        System.out.print(\"    \");\r\n        System.out.println(\"Rekord: \" + record);\r\n        System.out.println();\r\n        for (Character buchstabe : letters) {\r\n            System.out.print(buchstabe + \" \");\r\n        }\r\n        System.out.println();\r\n        System.out.println();\r\n    }\r\n\r\n    private GameResult eingabeAuswerten(String eingabe) {\r\n        if (eingabe.equals(word)) {\r\n            System.out.println();\r\n            System.out.println(\"Sie haben das Wort \" + word + \" erraten.\");\r\n            return GameResult.WORD_GUESSED;\r\n        }\r\n        if (eingabe.length() > 1 || !buchstabeGefunden(eingabe)) {\r\n            allowedMistakes--;\r\n            if (nichtErraten()) {\r\n                return GameResult.WORD_NOT_GUESSED;\r\n            }\r\n            return GameResult.LETTER_NOT_FOUND;\r\n        } else {\r\n            if (alleBuchstabenGefunden()) {\r\n                return GameResult.WORD_GUESSED;\r\n            }\r\n            return GameResult.LETTER_FOUND;\r\n        }\r\n    }\r\n\r\n    private boolean buchstabeGefunden(String eingabe) {\r\n        if (eingabe.equals(\"_\") || eingabe.isEmpty()) {\r\n            return false;\r\n        } else if (word.toLowerCase().contains(eingabe)) {\r\n            for (int i = 0; i < word.length(); i++) {\r\n                if (word.toLowerCase().charAt(i) == eingabe.charAt(0)) {\r\n                    letters.set(i, word.charAt(i));\r\n                }\r\n            }\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private boolean alleBuchstabenGefunden() {\r\n        StringBuilder sb = new StringBuilder();\r\n        for (Character buchstabe : letters) {\r\n            sb.append(buchstabe);\r\n        }\r\n        if (word.contentEquals(sb)) {\r\n            System.out.println();\r\n            System.out.println(\"Sie haben das Wort \" + word + \" gefunden.\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private boolean nichtErraten() {\r\n        if (allowedMistakes == 0) {\r\n            System.out.println();\r\n            System.out.println(\"Sie haben keine Versuche mehr. Sie haben verloren. Das Wort war: \" + word);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private void punkteVergeben(GameResult ergebnis) {\r\n        if (ergebnis == GameResult.WORD_GUESSED) {\r\n            score = score + allowedMistakes * 10;\r\n            System.out.println(\"Sie bekommen \" + allowedMistakes * 10 + \" Punkte, weil Sie \" + allowedMistakes + \" Fehlversuche übrig hatten.\");\r\n            if (score > record) {\r\n                record = score;\r\n            }\r\n            System.out.println();\r\n        } else {\r\n            score = 0;\r\n        }\r\n    }\r\n}
===================================================================
diff --git a/src/HangmanArcade.java b/src/HangmanArcade.java
--- a/src/HangmanArcade.java	
+++ b/src/HangmanArcade.java	
@@ -35,7 +35,7 @@
         System.out.println("Falls Sie das Wort nicht erraten, werden Ihre Punkte auf 0 zurückgesetzt.");
     }
 
-    public void starteSpiel() {
+    public void startGame() {
         boolean spielLaeuft = true;
         while (spielLaeuft) {
             word = words.get(random.nextInt(words.size()));
